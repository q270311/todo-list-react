{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","Tasks/useTasks.js","App.js","reportWebVitals.js","index.js"],"names":["Form","_ref","addNewTask","inputTextRef","useRef","_useState","useState","_useState2","Object","slicedToArray","newTaskContent","setNewTaskContent","react_default","a","createElement","className","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","type","ref","value","autoFocus","placeholder","onChange","_ref2","target","onClick","current","focus","Tasks","props","tasks","map","task","key","id","concat","done","hideDone","toggleTaskDone","content","removeTask","Buttons","length","react","toggleHideDone","disabled","every","setAllDone","Section","title","extraHeaderContent","body","Header","Container","children","useTasks","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","objectSpread","toConsumableArray","App","setHideDone","_useTasks","src_Container","src_Header","src_Section","src_Form","src_Buttons","src_Tasks","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7daf1651.chunk.js","sourcesContent":["import React  from 'react';\r\nimport { useState, useRef } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const inputTextRef = useRef(null);\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedNewTaskContent = newTaskContent.trim()\r\n        if (!trimmedNewTaskContent) {\r\n            return;\r\n        }\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                ref={inputTextRef}\r\n                value={newTaskContent}\r\n                autoFocus\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                className=\"form__text\"\r\n                onChange={({ target }) => setNewTaskContent(target.value.trim())}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Dodaj zadanie\"\r\n                className=\"form__button\"\r\n                onClick={() => inputTextRef.current.focus()}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React  from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Tasks = (props) => (\r\n   <ul className=\"list\">\r\n      {props.tasks.map(task => (\r\n         <li\r\n            key={task.id}\r\n            className={`list__item ${task.done && props.hideDone ? \"list__item--hidden\" : \"\"}`}\r\n         >\r\n            <button className=\"list__icon list__icon--green\" onClick={() => props.toggleTaskDone(task.id)}>\r\n               {task.done ? \"âœ”\" : \"\"}\r\n            </button>\r\n            <span className={`list__taskText ${task.done ? \" list__taskText--done\" : \"\"}`}>\r\n               {task.content}\r\n            </span>\r\n            <button className=\"list__icon list__icon--red\" onClick={() => props.removeTask(task.id)} >ðŸ—‘</button>\r\n         </li>         \r\n      ))}\r\n   </ul >\r\n);\r\n\r\nexport default Tasks; ","import React  from 'react';\r\nimport { Fragment } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = (props) => (\r\n    props.tasks.length > 0 && (\r\n        <div className=\"buttons__container\">\r\n            <Fragment>\r\n                <button\r\n                    className=\"buttons__button\"\r\n                    onClick={props.toggleHideDone}\r\n                >\r\n                    {props.hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </button>\r\n                <button\r\n                    className=\"buttons__button\"\r\n                    disabled={props.tasks.every(({ done }) => done)}\r\n                    onClick={props.setAllDone}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </button>\r\n            </Fragment>\r\n        </div>\r\n    )\r\n);\r\nexport default Buttons;","import React  from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, extraHeaderContent, body }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__header\">\r\n            {title}\r\n            {extraHeaderContent}\r\n        </div>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React  from 'react';\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React  from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"main\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    \r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(tasks => tasks.id !== id));\r\n    }\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n\r\n            return task;\r\n        }));\r\n    }\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => (\r\n            { ...task, done: true, }\r\n        )));\r\n    }\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            }\r\n        ]);\r\n    }\r\n\r\n    return {\r\n        tasks:tasks,\r\n        removeTask:removeTask,\r\n        toggleTaskDone:toggleTaskDone,\r\n        setAllDone:setAllDone,\r\n        addNewTask:addNewTask,\r\n    }\r\n}","import React  from 'react';\nimport { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./Tasks/useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(localStorage.getItem(\"hideDone\") ? JSON.parse(localStorage.getItem(\"hideDone\")) : false);\n\n  useEffect(() => {\n    localStorage.setItem(\"hideDone\", hideDone);\n  }, [hideDone]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n  \n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header title=\"Lista zadaÅ„\" />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title=\"Lista zadaÅ„\"\n          extraHeaderContent={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />}\n          body={<Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />}\n        />\n      </Container>      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}